# Set default shell to Bash for cloud instances
set-option -g default-shell /bin/bash

set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ",xterm-256color:RGB"

# to maintain long history
set -g history-limit 10000

# switching pane usin Alt+<arrow-keys>
bind -n M-Left select-pane -L
bind-key C-b Left select-pane -L # Also with C-b prefix
bind -n M-Right select-pane -R
bind-key C-b Right select-pane -R # Also with C-b prefix
bind -n M-Up select-pane -U
bind-key C-b Up select-pane -U # Also with C-b prefix
bind -n M-Down select-pane -D
bind-key C-b Down select-pane -D # Also with C-b prefix

# pane navigation using Alt + hjkl
bind -n M-h select-pane -L  # move left
bind-key C-b h select-pane -L  # move left (C-b prefix)
bind -n M-j select-pane -D  # move down
bind-key C-b j select-pane -D  # move down (C-b prefix)
bind -n M-k select-pane -U  # move up
bind-key C-b k select-pane -U  # move up (C-b prefix)
bind -n M-l select-pane -R  # move right
bind-key C-b l select-pane -R  # move right (C-b prefix)

# resize pane using Shift+<arrow-keys>
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1


# Create new panes and windows with current path
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# create new window with Alt+n
bind-key -n M-n new-window -c "#{pane_current_path}"
bind-key C-b n new-window -c "#{pane_current_path}" # Also with C-b prefix
# create new session with Alt+N
bind-key -n M-N new-session -c "#{pane_current_path}"
bind-key C-b N new-session -c "#{pane_current_path}" # Also with C-b prefix
# horizontally split window using Alt+'
bind-key -n "M-'" split-window -h -c "#{pane_current_path}"
bind-key C-b "'" split-window -h -c "#{pane_current_path}" # Also with C-b prefix
# vertically split window using Alt+/
bind-key -n M-/ split-window -v -c "#{pane_current_path}"
bind-key C-b / split-window -v -c "#{pane_current_path}" # Also with C-b prefix

# current pane full screen toggle
bind-key -n M-f resize-pane -Z
bind-key C-b f resize-pane -Z # Also with C-b prefix
bind-key -n M-s if-shell -F '#{==:#{PANE_VERTICAL},true}' {
  resize-pane -y 70%
  setenv -g PANE_VERTICAL false
} {
  resize-pane -y 100%
  setenv -g PANE_VERTICAL true
}
bind-key C-b s if-shell -F '#{==:#{PANE_VERTICAL},true}' { # Also with C-b prefix
  resize-pane -y 70%
  setenv -g PANE_VERTICAL false
} {
  resize-pane -y 100%
  setenv -g PANE_VERTICAL true
}

bind-key -n M-v if-shell -F '#{==:#{PANE_HORIZONTAL},true}' {
  resize-pane -x 70%
  setenv -g PANE_HORIZONTAL false
} {
  resize-pane -x 100%
  setenv -g PANE_HORIZONTAL true
}
bind-key C-b v if-shell -F '#{==:#{PANE_HORIZONTAL},true}' { # Also with C-b prefix
  resize-pane -x 70%
  setenv -g PANE_HORIZONTAL false
} {
  resize-pane -x 100%
  setenv -g PANE_HORIZONTAL true
}


# open tree view of all open window across session
# use hjkl to navigate and <Enter> to select
bind-key -n M-d resize-pane -Z \; choose-tree -w -F "#{pane_current_path} - #{pane_current_command}"
bind-key C-b d resize-pane -Z \; choose-tree -w -F "#{pane_current_path} - #{pane_current_command}" # Also with C-b prefix

# closing pane with Alt+q
bind-key -n M-q confirm-before "kill-pane"
bind-key C-b q confirm-before "kill-pane" # Also with C-b prefix
# closing session with Alt+Q
bind-key -n M-Q confirm-before "kill-window"
bind-key C-b Q confirm-before "kill-window" # Also with C-b prefix
# Kill current sesssion and switch to next session if present
bind-key X run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1
set-window-option -g automatic-rename on
set-window-option -g automatic-rename-format '#{b:pane_current_path}' # Show current directory in window title
# renumber windows sequentially after closing any of them
set -g renumber-windows on
# switch between windows (tmux :b) using Alt+<num>
bind-key -n M-1 select-window -t :1
bind-key C-b 1 select-window -t :1 # Also with C-b prefix
bind-key -n M-2 select-window -t :2
bind-key C-b 2 select-window -t :2 # Also with C-b prefix
bind-key -n M-3 select-window -t :3
bind-key C-b 3 select-window -t :3 # Also with C-b prefix
bind-key -n M-4 select-window -t :4
bind-key C-b 4 select-window -t :4 # Also with C-b prefix
bind-key -n M-5 select-window -t :5
bind-key C-b 5 select-window -t :5 # Also with C-b prefix
bind-key -n M-6 select-window -t :6
bind-key C-b 6 select-window -t :6 # Also with C-b prefix
bind-key -n M-7 select-window -t :7
bind-key C-b 7 select-window -t :7 # Also with C-b prefix
bind-key -n M-8 select-window -t :8
bind-key C-b 8 select-window -t :8 # Also with C-b prefix
bind-key -n M-9 select-window -t :9
bind-key C-b 9 select-window -t :9 # Also with C-b prefix
bind-key -n M-0 select-window -t :10
bind-key C-b 0 select-window -t :10 # Also with C-b prefix
bind-key -n M-= last-window
bind-key C-b = last-window # Also with C-b prefix

# Window movement
# move window to first position
bind-key -n M-` move-window -t 0
bind-key C-b '`' move-window -t 0 # Also with C-b prefix
# swap window with left  window
bind-key -n M-< swap-window -t -1
bind-key C-b '<' swap-window -t -1 # Also with C-b prefix
# swap window with right window
bind-key -n M-> swap-window -t +1
bind-key C-b '>' swap-window -t +1 # Also with C-b prefix
# rotate pane
bind-key -n M-r rotate-window
bind-key C-b r rotate-window # Also with C-b prefix

# Pane Arrangement
# arange panes in vertical split alongside main pane
bind-key -n M-w select-layout main-vertical
bind-key C-b w select-layout main-vertical # Also with C-b prefix
# arange panes in horizontal split alongside main pane
bind-key -n M-e select-layout main-horizontal
bind-key C-b e select-layout main-horizontal # Also with C-b prefix
# arange panes in even vertical split
bind-key -n M-W select-layout even-vertical
bind-key C-b W select-layout even-vertical # Also with C-b prefix
# arange panes in even horizontal split
bind-key -n M-E select-layout even-horizontal
bind-key C-b E select-layout even-horizontal # Also with C-b prefix

# Pane movement
# mark currently focused pane
bind-key -n M-x select-pane -m # mark
bind-key C-b x select-pane -m # mark (C-b prefix)
# unmark currently focused pane
bind-key -n M-X select-pane -M # unmark
bind-key C-b X select-pane -M # unmark (C-b prefix)
bind-key -n M-y switch-client -t'{marked}'
bind-key C-b y switch-client -t'{marked}' # Also with C-b prefix
# join marked pane with current window
bind-key -n M-z join-pane
bind-key C-b z join-pane # Also with C-b prefix
# break current pane out of current window
bind-key -n M-B break-pane
bind-key C-b B break-pane # Also with C-b prefix
# join pane from different window to this window
# bind-key -n M-g command-prompt -p "horizontal join pane:"  "join-pane -v -s '%%'"
# bind-key -n M-v command-prompt -p "vertical join pane to:"  "join-pane -h -s '%%'"
# move pane to different window
bind-key -n M-m command-prompt -p "move pane to:"  "move-pane -t '%%'"
bind-key C-b m command-prompt -p "move pane to:"  "move-pane -t '%%'" # Also with C-b prefix

# Tmux popup window toggle using Alt+u
bind-key -n M-u if-shell -F '#{==:#{session_name},scratch}' {
  detach-client
} {
  display-popup -E "tmux new-session -A -s scratch"
}
bind-key C-b u if-shell -F '#{==:#{session_name},scratch}' { # Also with C-b prefix
  detach-client
} {
  display-popup -E "tmux new-session -A -s scratch"
}

# rename window with Alt+R
bind-key -n M-R command-prompt -I "" "rename-window '%%'"
bind-key C-b R command-prompt -I "" "rename-window '%%'" # Also with C-b prefix

# Quick view of processes (C+b p)
# Note: 'htop' needs to be installed on the server (e.g., sudo apt-get install htop)
bind-key p split-window -v 'exec htop'
# Help screen: rebind list-keys window into a new pane (C+b ?)
bind-key ? split-window -h 'exec tmux list-keys | less'
# switch to last pane (C+b C+a)
bind-key C-a last-pane


# setting up visual mode
setw -g mode-keys vi
# Helps visual selection by pressing V
bind-key -T copy-mode-vi v send-keys -X begin-selection
# copy selected text with y
# For clipboard integration on Debian, you would need to install 'xclip' (sudo apt-get install xclip)
# and uncomment the relevant line below.
# if-shell "uname | grep -q Darwin" "bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel \"pbcopy\"" "bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"
# if-shell "uname | grep -q Darwin" "bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel \"pbcopy\"" "bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel \"xclip -in -selection clipboard\""
set-option -g set-clipboard off


# Use mouse to select pane
set -g mouse on
# 12 hour time
set-window-option -g clock-mode-style 12
set -g status-position top

# Reload tmux.conf file
# Note: This assumes the config file will be at ~/.tmux.conf on the server
bind R source-file ~/.tmux.conf \; display "Reloaded .tmux.conf file"

# No plugins are loaded in this cloud-friendly configuration.
# If you need plugins, you would typically install TPM (Tmux Plugin Manager)
# and add 'set -g @plugin ...' lines, then 'run ~/.tmux/plugins/tpm/tpm' at the end.
